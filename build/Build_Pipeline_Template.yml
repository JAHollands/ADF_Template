# Purpose: Build pipeline template for the development Azure Data Factory 
# Automatically triggered on completion of a pull request and merge to main branch
# Generates the ARM template and publishes for consumption via Release pipeline

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  subscriptionId: '77e5c111-fef2-47a0-917b-783926a8ea2f'  # Replace with your Azure subscription ID
  resourceGroup: 'dev-jh-rg'  # Replace with the resource group used for the 'dev' data factory
  dataFactory: 'dev-jh-adf' # Replace with the 'dev' data factory name
  PackageFolder: 'build'  # Replace with the GIT folder holding the .json package files
  adfRootFolder: '' # Replace with the GIT folder hjolding the ADF resources. In this example the files are at the root so the value is left blank

steps:

# Installs Node 
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'

# Installs the npm packages saved in your package.json file in the build
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(Build.Repository.LocalPath)/$(packageFolder)'  #paramaterised as above to pickup the package.json file
    verbose: true
  displayName: 'Install npm packages'

# Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.Repository.LocalPath)/build' #paramaterised as above to pickup the package.json file
    customCommand: 'run build validate $(Build.Repository.LocalPath)/$(adfRootFolder) /subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroup)/providers/Microsoft.DataFactory/factories/$(dataFactory)'
  displayName: 'Validate Data Factory Resources'

# Generate the ARM template
- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.Repository.LocalPath)/build' #replace with the package.json folder
    customCommand: 'run build export $(Build.Repository.LocalPath)/$(adfRootFolder) /subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroup)/providers/Microsoft.DataFactory/factories/$(dataFactory) "ArmTemplate"'
  displayName: 'Generate ARM template'

# Publish the artifact to be used as a source for a release pipeline.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.Repository.LocalPath)/$(packageFolder)/ArmTemplate' #replace with the package.json folder
    artifact: 'ArmTemplates'
    publishLocation: 'pipeline'
  displayName: 'Publish ARM tempate'
